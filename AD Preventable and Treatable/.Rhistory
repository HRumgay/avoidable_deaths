dplyr::mutate(AD_prev=sum(AD_prev,na.rm=T))%>%
dplyr::mutate(AD_unavoid=sum(AD_unavoid,na.rm=T))%>%
dplyr::mutate(pAD_treat=AD_treat/total_deaths)%>%
#dplyr::mutate(pAD_treat_not_prev=AD_treat_not_prev/total_deaths)%>%
dplyr::mutate(pAD_prev=AD_prev/total_deaths)%>%
dplyr::mutate(pAD_unavoid=AD_unavoid/total_deaths)%>%
dplyr::mutate(pAD_treat_prev=AD_treat_prev/total_deaths)%>%
dplyr::mutate(cancer="All Cancer Sites")%>%
dplyr::mutate(cancer_code=1000)%>%
select(-py,-w)%>%
distinct()%>%
left_join(areas, by=c("area"))%>%
ungroup()%>%
distinct()%>%
left_join(HDI_Region_Mapping, by=c("area", "country_label"))%>%
as.data.frame()
#region and cancer site
AD_Region_cancer_sites <- Avoidable_Deaths_Simulated_All%>%
left_join(HDI_Region_Mapping2, by=c("country_code"))%>%
dplyr::mutate(age_cat="Overall")%>%
as.data.frame()%>%
droplevels()%>%
ungroup()%>%
dplyr::group_by(area, cancer, age,sex)%>%
dplyr::mutate(py=sum(py))%>%
ungroup()%>%
select(-country_label,-country_code,-cancer_code, hdi_group,  AD_treat, AD_prev,
AD_unavoid, total_deaths2, -sex, -age, age_cat,-total_overall)%>%
as.data.frame()%>%
droplevels()%>%
ungroup()%>%
dplyr::mutate(hdi_group=as.numeric(hdi_group))%>%
ungroup()%>%  dplyr::mutate(AD_treat_prev=AD_treat+AD_prev)%>%
ungroup()%>%
select(-hdi_group,-continent,   -AD_sum)%>%
dplyr::group_by(area,cancer)%>%
dplyr::mutate(AD_prev.asr=sum(AD_prev/py*100000*w), #ASR calculation here
AD_treat.asr=sum(AD_treat/py*100000*w),
AD_treat_prev.asr=sum((AD_treat+AD_prev)/py*100000*w),
#AD_treat_not_prev.asr=sum(AD_treat_not_prev/py*100000*w),
AD_unavoid.asr=sum(AD_unavoid/py*100000*w),
total.deaths.asr=sum(total_deaths2/py*100000*w)) %>%
dplyr::mutate(total_deaths=sum(total_deaths2,na.rm=T))%>%
select(-total_deaths2)%>%
dplyr::mutate(AD_treat_prev=sum(AD_treat,AD_prev,na.rm=T))%>%
dplyr::mutate(AD_treat=sum(AD_treat,na.rm=T))%>%
#dplyr::mutate(AD_treat_not_prev=sum(AD_treat_not_prev,na.rm=T))%>%
dplyr::mutate(AD_prev=sum(AD_prev,na.rm=T))%>%
dplyr::mutate(AD_unavoid=sum(AD_unavoid,na.rm=T))%>%
dplyr::mutate(pAD_treat=AD_treat/total_deaths)%>%
#dplyr::mutate(pAD_treat_not_prev=AD_treat_not_prev/total_deaths)%>%
dplyr::mutate(pAD_prev=AD_prev/total_deaths)%>%
dplyr::mutate(pAD_unavoid=AD_unavoid/total_deaths)%>%
dplyr::mutate(pAD_treat_prev=AD_treat_prev/total_deaths)%>%
select(-py,-w)%>%
distinct()%>%
left_join(areas, by=c("area"))%>%
ungroup()%>%
distinct()%>%
left_join(HDI_Region_Mapping, by=c("area", "country_label"))%>%
as.data.frame()%>%
dplyr::group_by(area)
# age standardizing by region - aggregate by region and then age standardize
countries_regions<-Avoidable_Deaths_Simulated_All%>%
select(country_code)%>%
distinct()%>%
left_join(HDI_Region_Mapping2, by=c("country_code"))
# Table 1 in the manuscript
# Gives us number, percentage of total deaths
table_1_1_no_chin_ind <- Avoidable_Deaths_Simulated_All %>%
filter(!country_label%in%c("China","India"))%>%
select(-country_label, -country_code, -cancer_code, hdi_group)%>%
dplyr::mutate(age_cat="Overall")%>%
dplyr::group_by(cancer, age,sex)%>%
dplyr::mutate(py=sum(py))%>%
ungroup()%>%
as.data.frame()%>%
droplevels()%>%
ungroup()%>%
dplyr::mutate(hdi_group=as.numeric(hdi_group))%>%
ungroup()%>%  dplyr::mutate(AD_treat_prev=AD_treat+AD_prev)%>%
ungroup()%>%
dplyr::mutate(AD_prev.asr=sum(AD_prev/py*100000*w), #ASR calculation here
AD_treat.asr=sum(AD_treat/py*100000*w),
AD_treat_prev.asr=sum((AD_treat + AD_prev)/py*100000*w),
#AD_treat_not_prev.asr=sum(AD_treat_not_prev/py*100000*w),
AD_unavoid.asr=sum(AD_unavoid/py*100000*w),
total.deaths.asr=sum(total_deaths2/py*100000*w)) %>%
ungroup()%>%
dplyr::mutate(total_deaths=sum(total_deaths2,na.rm=T))%>%
dplyr::mutate(AD_treat_prev=sum(AD_treat,AD_prev,na.rm=T))%>%
dplyr::mutate(AD_treat=sum(AD_treat,na.rm=T))%>%
#dplyr::mutate(AD_treat_not_prev=sum(AD_treat_not_prev,na.rm=T))%>%
dplyr::mutate(AD_prev=sum(AD_prev,na.rm=T))%>%
dplyr::mutate(AD_unavoid=sum(AD_unavoid,na.rm=T))%>%
dplyr::mutate(pAD_treat=AD_treat/total_deaths)%>%
#dplyr::mutate(pAD_treat_not_prev=AD_treat_not_prev/total_deaths)%>%
dplyr::mutate(pAD_prev=AD_prev/total_deaths)%>%
dplyr::mutate(pAD_unavoid=AD_unavoid/total_deaths)%>%
dplyr::mutate(pAD_treat_prev=AD_treat_prev/total_deaths)%>%
select(AD_prev, AD_treat,
# AD_treat_not_prev,
AD_treat_prev, AD_unavoid, total_deaths,
pAD_treat,
# pAD_treat_not_prev,
pAD_prev,pAD_treat_prev, pAD_unavoid,
AD_prev.asr,AD_treat.asr ,
#AD_treat_not_prev.asr,
AD_treat_prev.asr, AD_unavoid.asr,total.deaths.asr)%>%
distinct()
# By Country and all cancer sites
AD_country_all_cancers2<-AD_country_all_cancers%>%
ungroup()%>%
distinct()%>%
dplyr::mutate(across(6:10,round, -2))%>%
dplyr::mutate(across(11:15,round, 1))%>%
dplyr::mutate(across(16:16,round, -2))%>%
dplyr::mutate(across(17:20, round,3)*100)%>% #dplyr::mutate to show proportion as percentage in export
select("country_code","country_label",
"cancer_code", "cancer",
"AD_prev",        "pAD_prev",    "AD_prev.asr",
"AD_treat",       "pAD_treat" ,"AD_treat.asr",
"AD_treat_prev",  "pAD_treat_prev","AD_treat_prev.asr",
"AD_unavoid",     "pAD_unavoid" ,   "AD_unavoid.asr",
"total_deaths","total.deaths.asr")
# Gives us number, percentage of total deaths
table_1_1 <- Avoidable_Deaths_Simulated_All %>%
select(-country_label, -country_code, -cancer_code, hdi_group)%>%
dplyr::mutate(age_cat="Overall")%>%
dplyr::group_by(cancer, age,sex)%>%
dplyr::mutate(py=sum(py))%>%
ungroup()%>%
as.data.frame()%>%
droplevels()%>%
ungroup()%>%
dplyr::mutate(hdi_group=as.numeric(hdi_group))%>%
ungroup()%>%
dplyr::mutate(AD_treat_prev=AD_treat+AD_prev)%>%
ungroup()%>%
dplyr::mutate(AD_prev.asr=sum(AD_prev/py*100000*w), #ASR calculation here
AD_treat.asr=sum(AD_treat/py*100000*w),
AD_treat_prev.asr=sum((AD_treat+AD_prev)/py*100000*w),
#  AD_treat_not_prev.asr=sum(AD_treat_not_prev/py*100000*w),
AD_unavoid.asr=sum(AD_unavoid/py*100000*w),
total.deaths.asr=sum(total_deaths2/py*100000*w)) %>%
ungroup()%>%
dplyr::mutate(total_deaths=sum(total_deaths2,na.rm=T))%>%
dplyr::mutate(AD_treat_prev=sum(AD_treat,AD_prev,na.rm=T))%>%
dplyr::mutate(AD_treat=sum(AD_treat,na.rm=T))%>%
#dplyr::mutate(AD_treat_not_prev=sum(AD_treat_not_prev,na.rm=T))%>%
dplyr::mutate(AD_prev=sum(AD_prev,na.rm=T))%>%
dplyr::mutate(AD_unavoid=sum(AD_unavoid,na.rm=T))%>%
dplyr::mutate(pAD_treat=AD_treat/total_deaths)%>%
# dplyr::mutate(pAD_treat_not_prev=AD_treat_not_prev/total_deaths)%>%
dplyr::mutate(pAD_prev=AD_prev/total_deaths)%>%
dplyr::mutate(pAD_unavoid=AD_unavoid/total_deaths)%>%
dplyr::mutate(pAD_treat_prev=AD_treat_prev/total_deaths)%>%
select(AD_prev, AD_treat,
#AD_treat_not_prev,
AD_treat_prev, AD_unavoid, total_deaths,
pAD_treat,
#pAD_treat_not_prev,
pAD_prev,pAD_treat_prev, pAD_unavoid,
AD_prev.asr,AD_treat.asr ,
#AD_treat_not_prev.asr,
AD_treat_prev.asr, AD_unavoid.asr,total.deaths.asr)%>%
distinct()
# By country AND cancer site
# AD by country and cancer site
Avoidable_Deaths_Simulated_All
Avoidable_Deaths_Simulated_All_age_cat
Avoidable_Deaths_Simulated_All_age_cat_overall<-Avoidable_Deaths_Simulated_All_age_cat%>% #Object to plot overall age standardized on world maps
as.data.frame()%>%
dplyr::filter(age_cat=="Overall")%>%
ungroup()%>%
dplyr::group_by(country_code,cancer_code)%>%
dplyr::mutate(total_deaths=sum(total_deaths2,na.rm=T))%>%
#select(-total_deaths2,-AD_sum)%>%
dplyr::mutate(AD_treat_prev=sum(AD_treat, AD_prev,na.rm=T))%>%
dplyr::mutate(AD_treat=sum(AD_treat,na.rm=T))%>%
#dplyr::mutate(AD_treat_not_prev=sum(AD_treat_not_prev,na.rm=T))%>%
dplyr::mutate(AD_prev=sum(AD_prev,na.rm=T))%>%
dplyr::mutate(AD_unavoid=sum(AD_unavoid,na.rm=T))%>%
dplyr::mutate(pAD_treat=AD_treat/total_deaths)%>%
#dplyr::mutate(pAD_treat_not_prev=AD_treat_not_prev/total_deaths)%>%
dplyr::mutate(pAD_prev=AD_prev/total_deaths)%>%
dplyr::mutate(pAD_unavoid=AD_unavoid/total_deaths)%>%
dplyr::mutate(pAD_treat_prev=AD_treat_prev/total_deaths)%>%
as.data.frame()%>%
select( "country_code","country_label","cancer_code", "cancer",
"AD_prev","pAD_prev",
"AD_treat",  "pAD_treat" ,
# AD_treat_not_prev, pAD_treat_not_prev,
"AD_treat_prev", "pAD_treat_prev",
"AD_unavoid",   "pAD_unavoid" ,
"total_deaths"
)%>%
dplyr::mutate(across(5:5,round,0 ))%>%
dplyr::mutate(across(6:6, round,3)*100)%>%
dplyr::mutate(across(7:7,round,0 ))%>%
dplyr::mutate(across(8:8, round,3)*100)%>%
dplyr::mutate(across(9:9,round,0 ))%>%
dplyr::mutate(across(10:10, round,3)*100)%>%
dplyr::mutate(across(11:11,round,0 ))%>%
dplyr::mutate(across(12:12, round,3)*100)%>%
dplyr::mutate(across(13:13,round,0 ))%>%
dplyr::mutate(across(5:5, function(x) paste0(format(x, big.mark = ","))))%>%
dplyr::mutate(across(6:6, function(x) paste0(format(x, big.mark = ","))))%>%
dplyr::mutate(across(7:7, function(x) paste0(format(x, big.mark = ","))))%>%
dplyr::mutate(across(8:8, function(x) paste0(format(x, big.mark = ","))))%>%
dplyr::mutate(across(9:9, function(x) paste0(format(x, big.mark = ","))))%>%
dplyr::mutate(across(10:10, function(x) paste0(format(x, big.mark = ","))))%>%
dplyr::mutate(across(11:11, function(x) paste0(format(x, big.mark = ","))))%>%
dplyr::mutate(across(12:12, function(x) paste0(format(x, big.mark = ","))))%>%
dplyr::mutate(across(13:13, function(x) paste0(format(x, big.mark = ","))))
#By cancer site
AD_cancer2 <- AD_cancer%>%
select( "country_code", "country_label",
"cancer_code", "cancer",
"AD_prev",
"AD_treat",
"AD_treat_prev",
"AD_unavoid",
"total_deaths",
"pAD_prev",     "pAD_treat" ,"pAD_treat_prev","pAD_unavoid" ,
"AD_prev.asr",
"AD_treat.asr",
"AD_treat_prev.asr",
"AD_unavoid.asr",
"total.deaths.asr",
)%>%
as.data.frame()%>%
dplyr::mutate(across(5:9,round, -2))%>%
dplyr::mutate(across(10:13, round,3)*100)%>%#%>% #dplyr::mutate to show proportion as percentage in export
dplyr::mutate(across(14:18,round, 1))%>%
dplyr::mutate(across(5:9, ~paste0(format(.x, big.mark = ","))))%>%
dplyr::mutate(across(10:13, ~paste0(format(.x, big.mark = ","))))%>%
dplyr::mutate(across(14:18, ~paste0(format(.x, big.mark = ","))))%>%
select("country_code","country_label",
"cancer_code", "cancer",
"AD_prev",        "pAD_prev",    "AD_prev.asr",
"AD_treat",       "pAD_treat" ,"AD_treat.asr",
"AD_treat_prev",  "pAD_treat_prev","AD_treat_prev.asr",
"AD_unavoid",     "pAD_unavoid" ,   "AD_unavoid.asr",
"total_deaths","total.deaths.asr")
#By region
AD_Region<-AD_Region2%>%
dplyr::mutate(across(2:4, round, -2))%>%
dplyr::mutate(across(6:6,round, -2))%>%
dplyr::mutate(across(7:11,round, 1))%>%
dplyr::mutate(across(12:12,round, -2))%>%
dplyr::mutate(across(13:16, round,3)*100)%>% #dplyr::mutate to show proportion as percentage in export
arrange(continent, country_label)%>%
dplyr::mutate(across(2:12, ~paste0(format(.x, big.mark = ","))))%>%
dplyr::mutate(across(13:16, ~paste0(format(.x, big.mark = ","))))%>%
select("continent","area","country_label","age_cat", "cancer_code", "cancer",
"AD_prev",        "pAD_prev",    "AD_prev.asr",
"AD_treat",       "pAD_treat" ,"AD_treat.asr",
"AD_treat_prev",  "pAD_treat_prev","AD_treat_prev.asr",
"AD_unavoid",     "pAD_unavoid" ,   "AD_unavoid.asr",
"total_deaths","total.deaths.asr")
#World total
table_1_11<-table_1_1%>%
dplyr::mutate(across(1:5,round, -2))%>%
dplyr::mutate(across(6:9, round,3)*100)%>% #dplyr::mutate to show proportion as percentage in export
dplyr::mutate(across(10:13,round, 1))%>%
dplyr::mutate(across(14:14,round, 1))%>%
dplyr::mutate(across(1:5, ~paste0(format(.x, big.mark = ","))))%>%
dplyr::mutate(across(6:9, ~paste0(format(.x, big.mark = ","))))%>%
dplyr::mutate(across(10:13, ~paste0(format(.x, big.mark = ","))))%>%
dplyr::mutate(across(14:14, ~paste0(format(.x, big.mark = ","))))%>%
select(
"AD_prev",        "pAD_prev",    "AD_prev.asr",
"AD_treat",       "pAD_treat" ,"AD_treat.asr",
"AD_treat_prev",  "pAD_treat_prev","AD_treat_prev.asr",
"AD_unavoid",     "pAD_unavoid" ,   "AD_unavoid.asr",
"total_deaths","total.deaths.asr")
#HDI
AD_by_HDI
AD_by_HDI_all2<-AD_by_HDI_all%>%
arrange(hdi_group)%>%
select( "hdi_group",
#        "country_label",
"cancer",
"AD_prev",
"AD_treat",
"AD_treat_prev",
"AD_unavoid",
"total_deaths",
"pAD_prev",     "pAD_treat" ,"pAD_treat_prev","pAD_unavoid" ,
"AD_prev.asr",
"AD_treat.asr",
"AD_treat_prev.asr",
"AD_unavoid.asr",
"total.deaths.asr",
)%>%
dplyr::mutate(across(3:7, round, -2))%>%
dplyr::mutate(across(8:11, round,3)*100)%>% #dplyr::mutate to show proportion as percentage in export
dplyr::mutate(across(12:16, round, 1))%>%
mutate(across(3:7, ~ paste0(format(.x, big.mark = ",")))) %>%
mutate(across(12:16, ~ paste0(format(.x, big.mark = ",")))) %>%
mutate(across(8:11, ~ paste0(format(.x, nsmall = 2))))%>%
select( "hdi_group",      "cancer",
"AD_prev",        "pAD_prev",    "AD_prev.asr",
"AD_treat",       "pAD_treat" ,"AD_treat.asr",
"AD_treat_prev",  "pAD_treat_prev","AD_treat_prev.asr",
"AD_unavoid",     "pAD_unavoid" ,   "AD_unavoid.asr",
"total_deaths","total.deaths.asr")
# By risk factor
#
# In a seperate file
#
# Combined table for paper (99%) ready to copy paste
AD_Region
AD_by_HDI
table_1_11
AD_Region
AD_by_HDI_all2
AD_country_all_cancers2
AD_cancer2
Avoidable_Deaths_Simulated_All_age_cat_overall
# writing the files
data.table::fwrite(Simulated_Data_PAF_All, "I:\\Studies\\Survival\\SurvCan\\Data\\Oliver_Langselius\\AD_PREV_TREAT\\Results\\NS_Simulated_All_Countries.csv")
data.table::fwrite(Avoidable_Deaths_Simulated_All, "I:\\Studies\\Survival\\SurvCan\\Data\\Oliver_Langselius\\AD_PREV_TREAT\\Results\\AD_Simulated_All_Countries.csv")
data.table::fwrite(Avoidable_Deaths_Simulated_All_age_cat, "I:\\Studies\\Survival\\SurvCan\\Data\\Oliver_Langselius\\AD_PREV_TREAT\\Results\\AD_Simulated_All_Countries_age_cat.csv")
data.table::fwrite(AD_Region, "I:\\Studies\\Survival\\SurvCan\\Data\\Oliver_Langselius\\AD_PREV_TREAT\\Results\\AD_Region.csv")
data.table::fwrite(table_1_11, "I:\\Studies\\Survival\\SurvCan\\Data\\Oliver_Langselius\\AD_PREV_TREAT\\Results\\AD_Total.csv")
data.table::fwrite(AD_by_HDI_all2, "I:\\Studies\\Survival\\SurvCan\\Data\\Oliver_Langselius\\AD_PREV_TREAT\\Results\\AD_HDI_All_Cancers.csv")
data.table::fwrite(AD_country_all_cancers2, "I:\\Studies\\Survival\\SurvCan\\Data\\Oliver_Langselius\\AD_PREV_TREAT\\Results\\AD_Country_All_Cancers.csv")
data.table::fwrite(AD_cancer2, "I:\\Studies\\Survival\\SurvCan\\Data\\Oliver_Langselius\\AD_PREV_TREAT\\Results\\AD_Cancer_by_Site.csv")
data.table::fwrite(Avoidable_Deaths_Simulated_All_age_cat_overall, "I:\\Studies\\Survival\\SurvCan\\Data\\Oliver_Langselius\\AD_PREV_TREAT\\Results\\AD_country_and_Cancer_by_Site.csv")
#Summing up the number of cases for the ppt and checking so cases in data set are same before and after
number_cases <- PAFs_age_Cat %>%
distinct()%>%
as.data.frame()%>%
select(country_label, cancer_label, cases)%>%
group_by(country_label, cancer_label)%>%
mutate(cases= sum(cases))%>%
distinct()
number_cases
number_cases_tot <- PAFs_age_Cat %>%
distinct()%>%
as.data.frame()%>%
select(cancer_label, cases)%>%
group_by(cancer_label)%>%
mutate(cases= sum(cases))%>%
distinct()
number_cases_tot
a<-Simulated_Data_PAF_All%>%filter(cancer_code==19)
sum(a$total_overall)
# cases in Globocan
globocan <- read.csv("I:\\Studies\\Survival\\SurvCan\\Data\\Oliver_Langselius\\PreGlobocan2022\\Globocan2022\\globocan.csv")%>%
as.data.frame()%>%
filter(type==0,
sex!=0,
country_code==900)
b<-globocan%>%filter(cancer_code==19, age>=4)
sum(b$cases)
# they match here but why do they differ in the website of cancer today?????
## script to plot maps of cancer cases and deaths 2020
library(data.table)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(ggrepel)
library(rgdal)
library(data.table)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(ggrepel)
library(rgdal)
install.packages("rgdal")
library(rgdal)
library(pastecs)
library(ggpubr)
library(pastecs)
library(rgdal)
install.packages("rgdal")
#library(rgdal)
library(pastecs)
library(ggpubr)
setwd("C:\\Users\\langseliuso\\Documents\\GitHub\\avoidable_deaths\\AD Preventable and Treatable")
## script to plot maps of cancer cases and deaths 2020
library(data.table)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(ggrepel)
#library(rgdal)
library(pastecs)
library(ggpubr)
setwd("C:\\Users\\langseliuso\\Documents\\GitHub\\avoidable_deaths\\AD Preventable and Treatable")
AD_country_all_cancers%>%select(country_label)%>%distinct()
# load AD results
AD_country_all_cancers2
#I:\Studies\Survival\SurvCan\Data\Oliver_Langselius\AD_PREV_TREAT\Data
AD_Map <- as.data.table(AD_country_all_cancers2)
# load id for each country
dict_id <-  as.data.table(read.csv("\\\\Inti\\cin\\Studies\\Survival\\SurvCan\\Data\\Oliver_Langselius\\AD_PREV_TREAT\\Data\\_shape\\id_OMS_official_general_map.csv", sep=","))
dict_id %>% dplyr::select(-country_label)-> dict_id
# merge paf data with dict_id
AD_Map <- merge(AD_Map, dict_id, by = c("country_code"), all.x = T)
#------ map shape ------------------
# create a blank ggplot theme
{ theme_opts <- list(theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
panel.border = element_blank(),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position=c(.5, -0.05),
legend.key.width= unit(2, "cm"), #1
legend.key.height= unit(0.4, "cm"), #0.2
plot.title = element_text(size=18)))
# projection for area
#http://projectionwizard.org/
#eckert:
temp_proj<- "+proj=eck3"
# read shapefile official general (3 part)
shp_temp <- readOGR(dsn="\\\\Inti\\cin\\Studies\\Survival\\SurvCan\\Data\\Oliver_Langselius\\AD_PREV_TREAT\\Data\\_shape\\OMS_official_general", layer="general_2013")
shp_temp <- spTransform(shp_temp, CRS("+proj=eck3"))
df_map <- fortify(shp_temp)
int_map_index <- c(1:nrow(df_map))
df_map$int_map_index <- int_map_index
shp_temp <- readOGR(dsn="\\\\Inti\\cin\\Studies\\Survival\\SurvCan\\Data\\Oliver_Langselius\\AD_PREV_TREAT\\Data\\_shape\\OMS_official_general", layer="maskpoly_general_2013")
shp_temp <- spTransform(shp_temp, CRS("+proj=eck3"))
df_poly <- fortify(shp_temp)
int_map_index <- c(1:nrow(df_poly))
df_poly$int_map_index <- int_map_index
df_poly_layout <-  read.csv("\\\\Inti\\cin\\Studies\\Survival\\SurvCan\\Data\\Oliver_Langselius\\AD_PREV_TREAT\\Data\\_shape\\id_OMS_official_general_poly.csv", sep=",")
df_poly_layout$line_color <- as.factor(df_poly_layout$line_color)
df_poly_layout$line_type <- as.factor(df_poly_layout$line_type)
df_poly_layout$poly_fill <- as.factor(df_poly_layout$poly_fill)
df_poly <-  merge(df_poly, df_poly_layout, by = c("id"), all.x=TRUE, sort=F)
df_poly<- df_poly[order(df_poly$int_map_index),]
color_official <- c("grey100","#d6d6d6")
shp_temp <- readOGR(dsn="\\\\Inti\\cin\\Studies\\Survival\\SurvCan\\Data\\Oliver_Langselius\\AD_PREV_TREAT\\Data\\_shape\\/OMS_official_general", layer="maskline_general_2013")
shp_temp <- spTransform(shp_temp, CRS("+proj=eck3"))
df_line <- fortify(shp_temp)
int_map_index <- c(1:nrow(df_line))
df_line$int_map_index <- int_map_index
df_line_layout <-  read.csv("\\\\Inti\\cin\\Studies\\Survival\\SurvCan\\Data\\Oliver_Langselius\\AD_PREV_TREAT\\Data\\_shape\\id_OMS_official_general_line.csv", sep=",")
df_line_layout$line_color <- as.factor(df_line_layout$line_color)
df_line_layout$line_type <- as.factor(df_line_layout$line_type)
df_line <-  merge(df_line, df_line_layout, by = c("id"), all.x=TRUE, sort=F)
df_line<- df_line[order(df_line$int_map_index),]
}
setwd("C:\\Users\\langseliuso\\Documents\\GitHub\\avoidable_deaths\\AD Preventable and Treatable")
AD_country_all_cancers%>%select(country_label)%>%distinct()
AD_country_all_cancers2
AD_Map <- as.data.table(AD_country_all_cancers2)
dict_id <-  as.data.table(read.csv("\\\\Inti\\cin\\Studies\\Survival\\SurvCan\\Data\\Oliver_Langselius\\AD_PREV_TREAT\\Data\\_shape\\id_OMS_official_general_map.csv", sep=","))
dict_id %>% dplyr::select(-country_label)-> dict_id
# merge paf data with dict_id
AD_Map <- merge(AD_Map, dict_id, by = c("country_code"), all.x = T)
# create a blank ggplot theme
{ theme_opts <- list(theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
panel.border = element_blank(),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position=c(.5, -0.05),
legend.key.width= unit(2, "cm"), #1
legend.key.height= unit(0.4, "cm"), #0.2
plot.title = element_text(size=18)))
# projection for area
#http://projectionwizard.org/
#eckert:
temp_proj<- "+proj=eck3"
# read shapefile official general (3 part)
shp_temp <- readOGR(dsn="\\\\Inti\\cin\\Studies\\Survival\\SurvCan\\Data\\Oliver_Langselius\\AD_PREV_TREAT\\Data\\_shape\\OMS_official_general", layer="general_2013")
shp_temp <- spTransform(shp_temp, CRS("+proj=eck3"))
df_map <- fortify(shp_temp)
int_map_index <- c(1:nrow(df_map))
df_map$int_map_index <- int_map_index
shp_temp <- readOGR(dsn="\\\\Inti\\cin\\Studies\\Survival\\SurvCan\\Data\\Oliver_Langselius\\AD_PREV_TREAT\\Data\\_shape\\OMS_official_general", layer="maskpoly_general_2013")
shp_temp <- spTransform(shp_temp, CRS("+proj=eck3"))
df_poly <- fortify(shp_temp)
int_map_index <- c(1:nrow(df_poly))
df_poly$int_map_index <- int_map_index
df_poly_layout <-  read.csv("\\\\Inti\\cin\\Studies\\Survival\\SurvCan\\Data\\Oliver_Langselius\\AD_PREV_TREAT\\Data\\_shape\\id_OMS_official_general_poly.csv", sep=",")
df_poly_layout$line_color <- as.factor(df_poly_layout$line_color)
df_poly_layout$line_type <- as.factor(df_poly_layout$line_type)
df_poly_layout$poly_fill <- as.factor(df_poly_layout$poly_fill)
df_poly <-  merge(df_poly, df_poly_layout, by = c("id"), all.x=TRUE, sort=F)
df_poly<- df_poly[order(df_poly$int_map_index),]
color_official <- c("grey100","#d6d6d6")
shp_temp <- readOGR(dsn="\\\\Inti\\cin\\Studies\\Survival\\SurvCan\\Data\\Oliver_Langselius\\AD_PREV_TREAT\\Data\\_shape\\/OMS_official_general", layer="maskline_general_2013")
shp_temp <- spTransform(shp_temp, CRS("+proj=eck3"))
df_line <- fortify(shp_temp)
int_map_index <- c(1:nrow(df_line))
df_line$int_map_index <- int_map_index
df_line_layout <-  read.csv("\\\\Inti\\cin\\Studies\\Survival\\SurvCan\\Data\\Oliver_Langselius\\AD_PREV_TREAT\\Data\\_shape\\id_OMS_official_general_line.csv", sep=",")
df_line_layout$line_color <- as.factor(df_line_layout$line_color)
df_line_layout$line_type <- as.factor(df_line_layout$line_type)
df_line <-  merge(df_line, df_line_layout, by = c("id"), all.x=TRUE, sort=F)
df_line<- df_line[order(df_line$int_map_index),]
}
shp_temp <- readOGR(dsn="\\\\Inti\\cin\\Studies\\Survival\\SurvCan\\Data\\Oliver_Langselius\\AD_PREV_TREAT\\Data\\_shape\\OMS_official_general", layer="general_2013")
library(rgdal)
